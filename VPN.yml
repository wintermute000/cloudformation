AWSTemplateFormatVersion: "2010-09-09"
Description: VPN demo with 2x AZs with 1x Public and 1x Private subnet in each, IGW on Public, no internet on Private (uncomment NAT GW lines if required), 2x test EC2 instances
Resources:
  VPC01:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: VPC01
        - Key: Environment
          Value: AWSCAN
  SubnetPub01:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AZa
      CidrBlock: !Ref SubnetPub01CIDR
      MapPublicIpOnLaunch: True
      Tags:
      - Key: Name
        Value: SubnetPub01
      - Key: SubnetType
        Value: Public
      VpcId: !Ref VPC01
  SubnetPub02:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AZb
      CidrBlock: !Ref SubnetPub02CIDR
      MapPublicIpOnLaunch: True
      Tags:
      - Key: Name
        Value: SubnetPub02
      - Key: SubnetType
        Value: Public
      VpcId: !Ref VPC01
  SubnetPriv01:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AZa
      CidrBlock: !Ref SubnetPriv01CIDR
      Tags:
      - Key: Name
        Value: SubnetPriv01
      - Key: SubnetType
        Value: Private
      VpcId: !Ref VPC01
  SubnetPriv02:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AZb
      CidrBlock: !Ref SubnetPriv02CIDR
      Tags:
      - Key: Name
        Value: SubnetPriv02
      - Key: SubnetType
        Value: Private
      VpcId: !Ref VPC01
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC01
  RouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC01
  RouteTableAssociationPublic01:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPub01
  RouteTableAssociationPublic02:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPub02
  RouteTableAssociationPrivate01:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref SubnetPriv01
  RouteTableAssociationPrivate01:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref SubnetPriv02
  InternetGateway01:
    Type: AWS::EC2::InternetGateway
  GatewayAttachment01:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway01
      VpcId: !Ref VPC01

#  ElasticIP01:
#    Type: AWS::EC2::EIP
#    Properties:
#      Domain: !Ref VPC01
#  NATGateway01:
#    Type: AWS::EC2::NatGateway
#    DependsOn: GatewayAttachment01
#    Properties: 
#      AllocationId: !GetAtt ElasticIP01.AllocationId
#      SubnetId: !Ref Subnet01

  DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachment01
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway01
      RouteTableId: !Ref RouteTablePublic
#  NATRoute:
#    Type: AWS::EC2::Route
#    DependsOn: NATGateway01
#    Properties:
#      DestinationCidrBlock: "0.0.0.0/0"
#      NatGatewayId: !Ref NATGateway01
#      RouteTableId: !Ref RouteTablePrivate
  EC2Instance01:
      Type: AWS::EC2::Instance
      Properties:
        InstanceType:
          Ref: InstanceType
        SecurityGroupIds:
        - Ref: SGPublic
        KeyName:
          Ref: KeyName
        ImageId:
          Fn::FindInMap:
          - AWSRegionArch2AMI
          - Ref: AWS::Region
          - Fn::FindInMap:
            - AWSInstanceType2Arch
            - Ref: InstanceType
            - Arch
        SubnetId: !Ref SubnetPub01
        Tags:
        - Key: Name
          Value: Instance01-Public
  EC2Instance02:
      Type: AWS::EC2::Instance
      Properties:
        InstanceType:
          Ref: InstanceType
        SecurityGroupIds:
        - Ref: SGPrivate
        KeyName:
          Ref: KeyName
        ImageId:
          Fn::FindInMap:
          - AWSRegionArch2AMI
          - Ref: AWS::Region
          - Fn::FindInMap:
            - AWSInstanceType2Arch
            - Ref: InstanceType
            - Arch
        SubnetId: !Ref SubnetPriv01
        Tags:
        - Key: Name
          Value: Instance02-Private
  SGPrivate:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Enable SSH access via port 22
        VpcId: !Ref VPC01
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref WebLocation 
        - IpProtocol: icmp
          FromPort: 8
          ToPort: -1
          CidrIp: !Ref SSHLocation
  SGPublic:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Enable SSH access via port 22 and Web access via port 80
        VpcId: !Ref VPC01
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref WebLocation
        - IpProtocol: icmp
          FromPort: 8
          ToPort: -1
          CidrIp: !Ref SSHLocation
  
  CustomerGateway01:
      Type: AWS::EC2::CustomerGateway
      Properties: 
        BgpAsn: 65531
        IpAddress: 144.136.139.235
        Type: ipsec.1
  VPNGateway:
    Type: AWS::EC2::VPNGateway
    Properties: 
      AmazonSideAsn: 65532
      Type: ipsec.1
  VPNGatewayRoutePropagation:
    Type: AWS::EC2::VPNGatewayRoutePropagation
    DependsOn: GatewayAttachment02
    Properties: 
      RouteTableIds:
      - !Ref RouteTablePublic
      - !Ref RouteTablePrivate
      VpnGatewayId: !Ref VPNGateway
  GatewayAttachment02:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpnGatewayId: !Ref VPNGateway   
      VpcId: !Ref VPC01
  VPNConnection:
    Type: AWS::EC2::VPNConnection
    Properties:
      Type: ipsec.1
      CustomerGatewayId: !Ref CustomerGateway01
      VpnGatewayId: !Ref VPNGateway
      Tags:
       - Key: Name
         Value: Tunnel1
      VpnTunnelOptionsSpecifications: 
      - PreSharedKey: Cisco123
      - TunnelInsideCidr: 169.254.32.188/30
  VPNConnection:
    Type: AWS::EC2::VPNConnection
    Properties:
      Type: ipsec.1
      CustomerGatewayId: !Ref CustomerGateway01
      VpnGatewayId: !Ref VPNGateway
      Tags:
       - Key: Name
         Value: Tunnel2
      VpnTunnelOptionsSpecifications: 
      - PreSharedKey: Cisco123
      - TunnelInsideCidr: 169.254.34.76/30
#
Parameters:
  VPCCIDR:
    Type: String
    Default: "172.17.0.0/16"
    Description: The CIDR range to assign to the VPC.
    AllowedPattern: "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}"
    ConstraintDescription: An IPv4 block in CIDR notation is required, e.g. 10.17.0.0/16
  AZa:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-southeast-2a
    Description: The availability zone a to assign to the subnet.
  AZb:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-southeast-2b
    Description: The availability zone b to assign to the subnet.
  SubnetPub01CIDR:
    Type: String
    Default: "172.17.1.0/24"
    Description: The CIDR range to assign to the subnet.
    AllowedPattern: "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}"
    ConstraintDescription: An IPv4 block in CIDR notation is required, e.g. 10.17.1.0/24
  SubnetPub02CIDR:
    Type: String
    Default: "172.17.2.0/24"
    Description: The CIDR range to assign to the subnet.
    AllowedPattern: "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}"
    ConstraintDescription: An IPv4 block in CIDR notation is required, e.g. 10.17.1.0/24
  SubnetPriv01CIDR:
    Type: String
    Default: "172.17.3.0/24"
    Description: The CIDR range to assign to the subnet.
    AllowedPattern: "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}"
    ConstraintDescription: An IPv4 block in CIDR notation is required, e.g. 10.17.1.0/24
  SubnetPriv02CIDR:
    Type: String
    Default: "172.17.4.0/24"
    Description: The CIDR range to assign to the subnet.
    AllowedPattern: "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}"
    ConstraintDescription: An IPv4 block in CIDR notation is required, e.g. 10.17.1.0/24
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  WebLocation:
    Description: The IP address range that can be used to Web to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: AWSCAN
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.


Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: PV64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: PV64
    m1.medium:
      Arch: PV64
    m1.large:
      Arch: PV64
    m1.xlarge:
      Arch: PV64
    m2.xlarge:
      Arch: PV64
    m2.2xlarge:
      Arch: PV64
    m2.4xlarge:
      Arch: PV64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    c1.medium:
      Arch: PV64
    c1.xlarge:
      Arch: PV64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATPV64
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    t2.large:
      Arch: NATHVM64
    m1.small:
      Arch: NATPV64
    m1.medium:
      Arch: NATPV64
    m1.large:
      Arch: NATPV64
    m1.xlarge:
      Arch: NATPV64
    m2.xlarge:
      Arch: NATPV64
    m2.2xlarge:
      Arch: NATPV64
    m2.4xlarge:
      Arch: NATPV64
    m3.medium:
      Arch: NATHVM64
    m3.large:
      Arch: NATHVM64
    m3.xlarge:
      Arch: NATHVM64
    m3.2xlarge:
      Arch: NATHVM64
    m4.large:
      Arch: NATHVM64
    m4.xlarge:
      Arch: NATHVM64
    m4.2xlarge:
      Arch: NATHVM64
    m4.4xlarge:
      Arch: NATHVM64
    m4.10xlarge:
      Arch: NATHVM64
    c1.medium:
      Arch: NATPV64
    c1.xlarge:
      Arch: NATPV64
    c3.large:
      Arch: NATHVM64
    c3.xlarge:
      Arch: NATHVM64
    c3.2xlarge:
      Arch: NATHVM64
    c3.4xlarge:
      Arch: NATHVM64
    c3.8xlarge:
      Arch: NATHVM64
    c4.large:
      Arch: NATHVM64
    c4.xlarge:
      Arch: NATHVM64
    c4.2xlarge:
      Arch: NATHVM64
    c4.4xlarge:
      Arch: NATHVM64
    c4.8xlarge:
      Arch: NATHVM64
    g2.2xlarge:
      Arch: NATHVMG2
    g2.8xlarge:
      Arch: NATHVMG2
    r3.large:
      Arch: NATHVM64
    r3.xlarge:
      Arch: NATHVM64
    r3.2xlarge:
      Arch: NATHVM64
    r3.4xlarge:
      Arch: NATHVM64
    r3.8xlarge:
      Arch: NATHVM64
    i2.xlarge:
      Arch: NATHVM64
    i2.2xlarge:
      Arch: NATHVM64
    i2.4xlarge:
      Arch: NATHVM64
    i2.8xlarge:
      Arch: NATHVM64
    d2.xlarge:
      Arch: NATHVM64
    d2.2xlarge:
      Arch: NATHVM64
    d2.4xlarge:
      Arch: NATHVM64
    d2.8xlarge:
      Arch: NATHVM64
    hi1.4xlarge:
      Arch: NATHVM64
    hs1.8xlarge:
      Arch: NATHVM64
    cr1.8xlarge:
      Arch: NATHVM64
    cc2.8xlarge:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-1:
      PV64: ami-2a69aa47
      HVM64: ami-6869aa05
      HVMG2: ami-61e27177
    us-west-2:
      PV64: ami-7f77b31f
      HVM64: ami-7172b611
      HVMG2: ami-60aa3700
    us-west-1:
      PV64: ami-a2490dc2
      HVM64: ami-31490d51
      HVMG2: ami-4b694d2b
    eu-west-1:
      PV64: ami-4cdd453f
      HVM64: ami-f9dd458a
      HVMG2: ami-2955524f
    eu-west-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-886369ec
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      PV64: ami-6527cf0a
      HVM64: ami-ea26ce85
      HVMG2: ami-81ac71ee
    ap-northeast-1:
      PV64: ami-3e42b65f
      HVM64: ami-374db956
      HVMG2: ami-46220c21
    ap-northeast-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-2b408b45
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      PV64: ami-df9e4cbc
      HVM64: ami-a59b49c6
      HVMG2: ami-c212aba1
    ap-southeast-2:
      PV64: ami-63351d00
      HVM64: ami-04481c741a0311bbb
      HVMG2: ami-0ad2db69
    ap-south-1:
      PV64: NOT_SUPPORTED
      HVM64: ami-ffbdd790
      HVMG2: ami-ca3042a5
    us-east-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-f6035893
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      PV64: NOT_SUPPORTED
      HVM64: ami-730ebd17
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      PV64: ami-1ad34676
      HVM64: ami-6dd04501
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      PV64: ami-77559f1a
      HVM64: ami-8e6aa0e3
      HVMG2: NOT_SUPPORTED

#Outputs:
#  InstanceId:
#    Description: InstanceId of the newly created EC2 instance
#    Value:
#      Ref: EC2Instance
#  AZ:
#    Description: Availability Zone of the newly created EC2 instance
#    Value:
#      Fn::GetAtt:
#      - EC2Instance
#      - AvailabilityZone
